{"version":3,"sources":["../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","../node_modules/@material-ui/icons/esm/AccountCircle.js","../node_modules/@material-ui/icons/esm/MeetingRoom.js","components/setup/JoinGame.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["InputAdornment","React","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","value","_extends","clsx","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","SvgIcon","_props$color","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","concat","capitalize","focusable","undefined","role","muiName","theme","userSelect","width","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","createSvgIcon","path","displayName","memo","forwardRef","createElement","d","useStyles","makeStyles","spacing","JoinGame","FormControl","InputLabel","htmlFor","Input","id","startAdornment","AccountCircle","MeetingRoom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","caption","button","overline","srOnly","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","marginBottom","colorInherit","colorTextPrimary","text","colorTextSecondary","displayInline","displayBlock"],"mappings":"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","file":"static/js/9.4521701e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"\n}), 'AccountCircle');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M14 6v15H3v-2h2V3h9v1h5v15h2v2h-4V6h-3zm-4 5v2h2v-2h-2z\"\n}), 'MeetingRoom');","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Input, InputLabel, InputAdornment, FormControl, TextField, Grid } from '@material-ui/core';\r\nimport { AccountCircle, MeetingRoom } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n        color: \"#FFFFFF\",\r\n    },\r\n}));\r\n\r\nfunction JoinGame(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.margin}>\r\n                <InputLabel htmlFor=\"input-username\">Name</InputLabel>\r\n                <Input\r\n                id=\"input-username\"\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                    </InputAdornment>\r\n                }\r\n                />\r\n            </FormControl>\r\n            <FormControl className={classes.margin}>\r\n                <InputLabel htmlFor=\"input-roomcode\">Room Code</InputLabel>\r\n                <Input\r\n                id=\"input-roomcode\"\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                    <MeetingRoom />\r\n                    </InputAdornment>\r\n                }\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JoinGame;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}